rl -s learning on # enable RL

indifferent-selection -g # use epsilon-greedy decision making

indifferent-selection -e 0.1 # 10% deviation from greedy

sp {propose*initialize-strumenti
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> +)
   (<o> ^name initialize-strumento)
}

sp {apply*initialize-strumenti
   (state <s> ^operator <op>)
   (<op> ^name initialize-strumento)
-->
   (<s> ^name costruisci_strumento
         ^strumento_posseduto niente 
         ^finestra 2
         ^location dentro_cella
         ^tronchi 2
         ^scala non_creata
        ^oggetti <o1> <o2> <o3> 
        ^strumento <sta> <stb> <stc>
        )
   (<o1> ^name molla)
   (<o2> ^name rametto)
   (<o3> ^name pietre)
   (<stb> ^name clava ^materials1 <o3> ^materials2 <o2>  ^reward -1) 
   (<stc> ^name lancia_sassi ^materials1 <o3> ^materials2 <o1>  ^reward -1)
   (<sta> ^name fionda ^materials1 <o1> ^materials2 <o2>  ^reward 1)
   

}

sp {costruisci*propose
   (state <s> ^name costruisci_strumento ^finestra 2
               ^location dentro_cella ^tronchi 2 ^scala non_creata
              ^strumento <str>
              )
  (<str> ^name <na> ^materials1 <oa> ^materials2 <ob> ) 
   (<oa> ^name <n_oa>)
   (<ob> ^name <n_ob>)
-->
   (<s> ^operator <op> +)
   (<op> ^name costr
        ^strumento <na> 
        ^oggetti <n_oa> <n_ob>)
      
         
}


sp {costruisci_strumento*rl*fionda

   (state <s> ^name costruisci_strumento

              ^operator <op> +)

   (<op> ^name costr
        ^strumento fionda 
        ^oggetti <n_oa> <n_ob> 
         )

-->

   (<s> ^operator <op> = 0)

}



sp {costruisci_strumento*rl*clava

   (state <s> ^name costruisci_strumento

              ^operator <op> +)

   (<op> ^name costr
        ^strumento clava
        ^oggetti <n_oa> <n_ob> 
         )

-->

   (<s> ^operator <op> = 0)

}

sp {costruisci_strumento*rl*lancia_sassi

   (state <s> ^name costruisci_strumento
              ^operator <op> +)

   (<op> ^name costr
        ^strumento lancia_sassi 
        ^oggetti <n_oa> <n_ob> 
         )

-->

   (<s> ^operator <op> = 0)

}


sp {costruisci*apply
    (state <s>  ^finestra 2  ^location dentro_cella ^tronchi 2 ^strumento_posseduto niente  ^scala non_creata ^operator <op> )

   (<op> ^name costr
        ^strumento <name_s> 
         ^oggetti <n_oa>{<> <n_oa> <n_ob>}
         )
-->
(<s> ^finestra 2 ^location dentro_cella ^tronchi 2 ^scala non_creata ^strumento_posseduto niente - <name_s>)
  (write (crlf) |Raccolgo primo oggetto: | <n_oa>)
  (write (crlf) |Raccolgo secondo oggetto: | <n_ob>)
  (write (crlf) |ho costruito | <name_s>)
  
    
}



sp {elaborate*reward

   (state <s> ^name costruisci_strumento
              ^reward-link <r>
              ^strumento <str>
              ^strumento_posseduto <na>
              )
  (<str> ^name <na> ^reward <d-reward>) 
   
-->

   (<r> ^reward <rr>)

   (<rr> ^value <d-reward>)

}


sp {propose*usa-strumenti1
   (state <s> 
          ^strumento_posseduto clava)
-->
   (write (crlf) |oh no non posso uare la clava per rompere il vetro...|)
   (halt )
}

sp {propose*usa-strumenti3
   (state <s>  
          ^strumento_posseduto lancia_sassi)
-->
(write (crlf) |oh no non posso uare il lancia sassi per rompere il vetro...|)
(halt )
   
}


sp {propose*usa-strumenti2
   (state <s> ^finestra 2 ^location dentro_cella ^tronchi 2 ^scala non_creata
          ^strumento_posseduto fionda)
-->
   (<s> ^operator <op> +)
   (<op> ^name usa_fionda
        ^strumento_posseduto fionda
        ^finestra <f>)     
}


sp {apply*usa-fionda
   (state <s> ^operator <op> +)
   (<op> ^name usa_fionda
        ^strumento_posseduto fionda
        ^finestra <f>)
         
-->
(<s>  ^name finestra_colpita ^finestra (- <f> 1))
   
   (write (crlf) |ho colpito la finestra ma non si è ancora rotta| )      
}




sp {propose*distruggi
          (state <s> ^name finestra_colpita ^location dentro_cella ^tronchi 2 ^scala non_creata
          ^finestra <f>)
-->
(<s> ^operator <op> +)
   (<op> ^name distruggi_finestra
        ^strumento_posseduto fionda
        ^finestra <f>)
   (write (crlf) |mancante : | <f>)
   
}


sp {apply*distruggi_finestra
   (state <s> ^operator <op> +)
   (<op> ^name distruggi_finestra
        ^strumento_posseduto fionda
        ^finestra <f>)
         
-->
(<s>  ^name finestra_rotta ^finestra (- <f> 1))
   (write (crlf) |mancante : 0| )
   (write (crlf) |ho colpito la finestra, ora è rotta, fuggiamo!!| ) 
     
}

sp {propose*crea_scala
   (state <s> ^name finestra_rotta ^location dentro_cella ^scala non_creata ^tronchi <t>)
         
-->
(<s> ^operator <op> +)
   (<op> ^name crea_scala
       ^location dentro_cella ^tronchi <t> ^scala creata)

}

sp {apply*crea_scala
   (state <s> ^operator <op> +)
   (<op> ^name crea_scala
       ^location dentro_cella ^tronchi <t> ^scala <cr>)
         
-->
(<s>  ^name scala_creata ^tronchi (- <t> 2)  ^location dentro_cella ^scala non_creata - <cr>)
   
   (write (crlf) |scala creata ora posso saltare fuori dalla finestra|) 
     
}

sp {propose*fuggiamo
 (state <s> ^name scala_creata ^location dentro_cella ^scala creata)
         
-->
(<s> ^operator <op> +)
   (<op> ^name fuggi
       ^location dentro_cella ^direzione esterno_cella)
}


sp {apply*fuggiamo
   (state <s> ^operator <op> +)
   (<op> ^name fuggi
       ^location dentro_cella
       ^direzione <d>)
         
-->
(<s>  ^name libero   ^location dentro_cella - <d>)
    
  
}


sp {end*escape
   (state <s> ^name libero  ^location {<> dentro_cella})
         
-->
(write (crlf) |salgo la scala....|) 
(write (crlf) |!!!!!!!sono libero!!!!!!!|) 
(halt)
    
    
  
}
